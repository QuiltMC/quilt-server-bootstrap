plugins {
    id 'java'
    id 'java-library'
	alias libs.plugins.shadow
	//alias libs.plugins.proguard
}

base {
	archivesName = 'quilt_server_bootstrap'
}

version = '0.1.0'

repositories {
    mavenCentral()
    maven { url = 'https://maven.quiltmc.org/repository/release' }
}

dependencies {
	implementation libs.quilt.parsers.json
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
    manifest {
        attributes(
            'Main-Class': 'org.quiltmc.quilt_server_bootstrap.Main',
            'Launcher-Agent-Class': 'org.quiltmc.quilt_server_bootstrap.Agent'
        )
    }
}

shadowJar {
	archiveClassifier = null
	relocate 'org.quiltmc.parsers.json', 'qsb.quilt.parsers.json'
	minimize()
}

tasks.named('build').configure {
	dependsOn tasks.named('shadowJar')
}

import java.nio.file.Files

tasks.register('run', JavaExec) {
	dependsOn tasks.named('shadowJar')
	classpath = files(tasks.named('shadowJar'))
	workingDir = "${project.projectDir}/run/"
	args '--nogui'

	if (Files.notExists(getWorkingDir().toPath())) {
		Files.createDirectory(getWorkingDir().toPath())
	}
}
